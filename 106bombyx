#!/usr/bin/python3
##
## EPITECH PROJECT, 2023
## 106bombyx
## File description:
## bunny population
##

import sys
import parser
from decimal import Decimal, getcontext

getcontext().prec = 17

def print_usage():
    print("USAGE")
    print("\t./106bombyx n [k | i0 i1]\n")
    print("DESCRIPTION")
    print("\tn\tnumber of first generation individuals")
    print("\tk\tgrowth rate from 1 to 4")
    print("\ti0\tinitial generation (included)")
    print("\ti1\tfinal generation (included)")

def calculate_popu_range(k, n, start, end):
    result = []

    n = Decimal(n)
    k = Decimal(k)
    for i in range(end):
        if i >= start and i < end:
            result.append(float(n if n > 0 else 0))
        n = k * n * Decimal((1000 - n) / 1000)
    return result

def synthetic_scheme():
    data = parser.parse()
    for i in range(100, 401):
        result = calculate_popu_range(i / 100, data["n"], data["i0"] - 1, data["i1"])
        for j in range(len(result)):
            print(f"{i / 100:.2f} {result[j]:.2f}")

def population_evolution():
    data = parser.parse()
    results = calculate_popu_range(data["k"], data["n"], 0, 100)

    for i in range(len(results)):
        print(f"{i + 1} {results[i]:.2f}")

def main():
    if len(sys.argv) == 2:
        if sys.argv[1] == "-h":
            print_usage()
        else:
            raise Exception("Unrecognized argument")
    elif len(sys.argv) == 3:
        population_evolution()
    elif len(sys.argv) == 4:
        synthetic_scheme()
    else:
        raise Exception("Invalid amount of parameters")

if __name__ == "__main__":
    main()
    try:
        pass
    except Exception as e:
        print(e, file=sys.stderr)
        exit(84)
