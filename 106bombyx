#!/usr/bin/python3
##
## EPITECH PROJECT, 2023
## 106bombyx
## File description:
## bunny population
##

import sys

def print_usage():
    print("USAGE")
    print("\t./106bombyx n [k | i0 i1]\n")
    print("DESCRIPTION")
    print("\tn\tnumber of first generation individuals")
    print("\tk\tgrowth rate from 1 to 4")
    print("\ti0\tinitial generation (included)")
    print("\ti1\tfinal generation (included)")

def calculate_popu_range(k, n, start, end):
    result = []

    for i in range(end):
        if i >= start and i < end:
            result.append(n)
        n = k * n * (1000 - n) / 1000
    return result

def synthetic_scheme(data):
    for i in range(100, 401):
        result = calculate_popu_range(i / 100, data["n"], data["i0"], data["i1"] + 1)
        for j in range(len(result)):
            print(f"{i / 100:.2f} {result[j]:.2f}")

def population_evolution(data):
    results = calculate_popu_range(data["k"], data["n"], 0, 100)

    for i in range(len(results)):
        print(f"{i + 1} {results[i]:.2f}")

def parse_parameters():
    if len(sys.argv) == 3:
        data = {
            "n": int(sys.argv[1]),
            "k": float(sys.argv[2]),
        }
        if data['k'] < 1 or data['k'] > 4:
            raise ValueError("Growth rate should be between 1 and 4")
    elif len(sys.argv) == 4:
        data = {
            "n": int(sys.argv[1]),
            "i0": int(sys.argv[2]),
            "i1": int(sys.argv[3]),
        }
        if not data["i0"] < data["i1"]:
            raise ValueError("i1 must be greater than i0")
    else:
        raise Exception("Invalid amount of arguments")
    if data["n"] < 0:
        raise ValueError("n cant be negative")
    return data

def main():
    data = parse_parameters()
    if len(sys.argv) == 2 and sys.argv[1] == "-h":
        print_usage()
    elif len(sys.argv) == 3:
        population_evolution(data)
    elif len(sys.argv) == 4:
        synthetic_scheme(data)
    else:
        raise Exception("Invalid amount of arguments")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(e, file=sys.stderr)
        exit(84)
